class Solution {
    public int jump(int[] nums) {
        int[] dp = new int[nums.length];
        int rightMost=nums[0];
        int min=1;
        int max=0;
        for (int i = 1; i <nums.length; i++) {
            if (i<=rightMost){
                dp[i]=min;
                max=Math.max(max,nums[i]+i);
            }else{
                rightMost=max;
                min++;
                i--;
            }
        }
        return dp[nums.length-1];
    }
}
//runtime:2 ms
//memory:38.3 MB
